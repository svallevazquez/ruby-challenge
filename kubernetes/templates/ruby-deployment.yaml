apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.general.namespace }}
  name: {{ .Values.deployments.appName }}
  labels:
    app: {{ .Values.deployments.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.deployments.appName }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.deployments.appName }}
    spec:
      containers:
        - name: {{ .Values.deployments.appName }}
          image: {{ .Values.images.ruby }}
          imagePullPolicy: IfNotPresent
          command: ['/bin/sh', '-c']
          args:
            # ---- FOR DEBUGGING (remember to run manually "BASED=SVQ bundle exec ruby main.rb input.txt" in the prop terminal) ---
            - >-
                cd ruby-challenge &&
                while :; do sleep 10; done
            # ----------------------------------------------------------------
            # ---- NORMAL BEHAVIOR ----
            # - >-
            #     cd ruby-challenge
            #     BASED=SVQ bundle exec ruby main.rb input.txt
            # ----------------------------------------------------------------
          resources: {}
          volumeMounts:
            {{ toYaml .Values.deployments.appVolumeMounts | nindent 12 }}
      restartPolicy: Always
      volumes:
        {{ toYaml .Values.deployments.appVolumes | nindent 8 }}
